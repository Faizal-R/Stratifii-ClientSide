name: CI/CD Pipeline For Frontend

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      
      - name: Create .env file (For Build)
        run: |
          echo "NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}" > .env
          echo "NEXT_PUBLIC_SOCKET_URL=${{ secrets.NEXT_PUBLIC_SOCKET_URL }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "NEXT_PUBLIC_RAZORPAY_KEY_ID=${{ secrets.NEXT_PUBLIC_RAZORPAY_KEY_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env
          echo "NEXT_PUBLIC_JUDGE0_API_URL=${{ secrets.NEXT_PUBLIC_JUDGE0_API_URL }}" >> .env
          echo "NEXT_PUBLIC_JUDGE0_RAPIDAPI_KEY=${{ secrets.NEXT_PUBLIC_JUDGE0_RAPIDAPI_KEY }}" >> .env
          echo "NEXT_PUBLIC_JUDGE0_RAPIDAPI_HOST=${{ secrets.NEXT_PUBLIC_JUDGE0_RAPIDAPI_HOST }}" >> .env
      
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build Docker Image
        run: docker build -t 5zziiihhh/stratifii-client:latest .
      
      - name: Publish Image to Docker Hub
        run: docker push 5zziiihhh/stratifii-client:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Clean up Docker resources
        run: |
          sudo docker system prune -a -f --volumes
          echo "Docker cleanup completed"
      
      - name: Remove old image if exists
        run: sudo docker rmi 5zziiihhh/stratifii-client:latest || true
      
      - name: Pull image from Docker Hub
        run: sudo docker pull 5zziiihhh/stratifii-client:latest
      
      - name: Delete old container
        run: sudo docker rm -f stratifii-client || true
      
      - name: Create .env file (For Deployment)
        run: |
          echo "NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}" > .env
          echo "NEXT_PUBLIC_SOCKET_URL=${{ secrets.NEXT_PUBLIC_SOCKET_URL }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "NEXT_PUBLIC_RAZORPAY_KEY_ID=${{ secrets.NEXT_PUBLIC_RAZORPAY_KEY_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env
          echo "NEXT_PUBLIC_JUDGE0_API_URL=${{ secrets.NEXT_PUBLIC_JUDGE0_API_URL }}" >> .env
          echo "NEXT_PUBLIC_JUDGE0_RAPIDAPI_KEY=${{ secrets.NEXT_PUBLIC_JUDGE0_RAPIDAPI_KEY }}" >> .env
          echo "NEXT_PUBLIC_JUDGE0_RAPIDAPI_HOST=${{ secrets.NEXT_PUBLIC_JUDGE0_RAPIDAPI_HOST }}" >> .env
      
      - name: Run Docker Container
        run: sudo docker run -d -p 3000:3000 --name stratifii-client --env-file .env --restart unless-stopped 5zziiihhh/stratifii-client:latest